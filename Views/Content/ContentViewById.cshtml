@model CastafraySoundCatalog.Models.ContentModel

@{
    ViewBag.Title = "Content View By ID";
}

<div>
    <hr />
    @Html.ActionLink("Back to List", "ContentManager")
    <hr />
</div>
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ContentId)
    <div class="form-group">
        @Html.Label("Title")
        <div>
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @id = "titleInput", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Artist")
        <div>
            @Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Description")
        <div>
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div>
            <input type="submit" id="saveButton" disabled value="Save" class="btn btn-default" style="background-color: aquamarine" />
        </div>
    </div>
</div>
<div class="form-group">
    <label for="@Model.FileName"></label>
    <div class="col-md-10">
        @if (Model.FileExtension == ".jpg" || Model.FileExtension == ".jpeg" || Model.FileExtension == ".gif" || Model.FileExtension == ".png")
        {
            <img src="@Url.Content(Model.BlobUrl)" />
        }
        @if (Model.FileExtension == ".mp4" || Model.FileExtension == ".avi" || Model.FileExtension == ".mov")
        {
            <video autoplay controls src="@Url.Content(Model.BlobUrl)"></video>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}